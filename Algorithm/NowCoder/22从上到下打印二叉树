/**
从上往下打印出二叉树的每个节点，同层节点从左至右打印。
*/
import java.util.ArrayList;
/**
public class TreeNode {
    int val = 0;
    TreeNode left = null;
    TreeNode right = null;

    public TreeNode(int val) {
        this.val = val;

    }

}
*/
public class Solution {
    public ArrayList<Integer> PrintFromTopToBottom(TreeNode root) {
        ArrayList<Integer> res = new ArrayList<>();
        if (root == null)
            return res;
        else {
            res.add(root.val);
        }
        res.addAll(PrintFromTopToBottom(root.left,root.right));
        return res;
    }
    public ArrayList<Integer> PrintFromTopToBottom(TreeNode left,TreeNode right){
        ArrayList<Integer> res = new ArrayList<>();
        if (left!=null&&right!=null){
            res.add(left.val);
            res.add(right.val);
            res.addAll(PrintFromTopToBottom(left.left,left.right));
            res.addAll(PrintFromTopToBottom(right.left,right.right));
            return res;
        }else if (left==null&&right!=null){
            res.add(right.val);
            res.addAll(PrintFromTopToBottom(right.left,right.right));
            return res;
        }else if(left!=null&&right==null){
            res.add(left.val);
            res.addAll(PrintFromTopToBottom(left.left,left.right));
            return res;
        }else {
            return res;
        }
    }

}
